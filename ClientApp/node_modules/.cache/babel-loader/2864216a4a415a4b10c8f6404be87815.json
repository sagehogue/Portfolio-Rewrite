{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\src\\\\components\\\\TextModal\\\\TextModal.js\";\nimport React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport classes from './TextModal.module.css';\n\nvar TextModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextModal, _Component);\n\n  function TextModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TextModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TextModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isHovered: false,\n      hideModal: _this.props.hide,\n      scrollToTop: _this.props.shouldResetScroll\n    };\n\n    _this.toggleHover = function () {\n      _this.setState(function (oldState) {\n        return _objectSpread({}, oldState, {\n          isHovered: !oldState.isHovered\n        });\n      });\n    };\n\n    _this.toggleHide = function () {\n      _this.setState(function (oldState) {\n        return _objectSpread({}, oldState, {\n          hideModal: !oldState.hideModal\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TextModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// maybe a check for a sound prop then make a sound! a boop!\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // window.scrollTo(0,0);\n      this.resetScrollView(); // if (this.state.scrollToTop) {\n      //     this.resetScrollView();\n      //     this.setState((oldState) => {\n      //         return {\n      //             ...oldState,\n      //             scrollToTop: false,\n      //         }\n      //     })\n      // }\n    }\n  }, {\n    key: \"resetScrollView\",\n    value: function resetScrollView() {\n      ReactDom.findDOMNode(this).scrollIntoView();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classArray = [classes.TextModal];\n      classArray.push(this.state.isHovered ? classes.hover : '');\n      classArray.push(this.props.hideModal ? classes.hide : '');\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: classArray.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.title ? React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.title) : null, this.props.title ? React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }) : null, this.props.children));\n    }\n  }]);\n\n  return TextModal;\n}(Component);\n\nexport default TextModal;","map":{"version":3,"sources":["C:\\Users\\Sge\\Desktop\\leet shit\\Websites\\Portfolio-Rewrite\\ClientApp\\src\\components\\TextModal\\TextModal.js"],"names":["React","Component","ReactDom","classes","TextModal","state","isHovered","hideModal","props","hide","scrollToTop","shouldResetScroll","toggleHover","setState","oldState","toggleHide","resetScrollView","findDOMNode","scrollIntoView","classArray","push","hover","join","title","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;IAEMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,SAAS,EAAE,MAAKC,KAAL,CAAWC,IAFlB;AAGJC,MAAAA,WAAW,EAAE,MAAKF,KAAL,CAAWG;AAHpB,K;;UA6BRC,W,GAAc,YAAM;AAChB,YAAKC,QAAL,CAAc,UAACC,QAAD,EAAc;AACxB,iCACOA,QADP;AAEIR,UAAAA,SAAS,EAAE,CAACQ,QAAQ,CAACR;AAFzB;AAIH,OALD;AAMH,K;;UAIDS,U,GAAa,YAAM;AACf,YAAKF,QAAL,CAAc,UAACC,QAAD,EAAc;AACxB,iCACOA,QADP;AAEIP,UAAAA,SAAS,EAAE,CAACO,QAAQ,CAACP;AAFzB;AAIH,OALD;AAMH,K;;;;;;;wCA1CmB,CAEhB;AAEH;;;yCAEoB;AACjB;AACA,WAAKS,eAAL,GAFiB,CAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;sCAEiB;AACdd,MAAAA,QAAQ,CAACe,WAAT,CAAqB,IAArB,EAA2BC,cAA3B;AACH;;;6BAsBQ;AACL,UAAIC,UAAU,GAAG,CAAChB,OAAO,CAACC,SAAT,CAAjB;AACAe,MAAAA,UAAU,CAACC,IAAX,CAAgB,KAAKf,KAAL,CAAWC,SAAX,GAAuBH,OAAO,CAACkB,KAA/B,GAAuC,EAAvD;AACAF,MAAAA,UAAU,CAACC,IAAX,CAAgB,KAAKZ,KAAL,CAAWD,SAAX,GAAuBJ,OAAO,CAACM,IAA/B,GAAsC,EAAtD;AACA,aACI,0CACI;AAAK,QAAA,SAAS,EAAEU,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,KAAKd,KAAL,CAAWe,KAAX,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKf,KAAL,CAAWe,KAAhB,CAAnB,GAAiD,IAJtD,EAKK,KAAKf,KAAL,CAAWe,KAAX,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB,GAA4B,IALjC,EAMK,KAAKf,KAAL,CAAWgB,QANhB,CADJ,CADJ;AAaH;;;;EAnEmBvB,S;;AAuExB,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport classes from './TextModal.module.css';\r\n\r\nclass TextModal extends Component {\r\n    state = {\r\n        isHovered: false,\r\n        hideModal: this.props.hide,\r\n        scrollToTop: this.props.shouldResetScroll,\r\n    }\r\n    componentDidMount() {\r\n\r\n        // maybe a check for a sound prop then make a sound! a boop!\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // window.scrollTo(0,0);\r\n        this.resetScrollView();\r\n        // if (this.state.scrollToTop) {\r\n        //     this.resetScrollView();\r\n        //     this.setState((oldState) => {\r\n        //         return {\r\n        //             ...oldState,\r\n        //             scrollToTop: false,\r\n        //         }\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    resetScrollView() {\r\n        ReactDom.findDOMNode(this).scrollIntoView();\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState((oldState) => {\r\n            return {\r\n                ...oldState,\r\n                isHovered: !oldState.isHovered,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    toggleHide = () => {\r\n        this.setState((oldState) => {\r\n            return {\r\n                ...oldState,\r\n                hideModal: !oldState.hideModal,\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let classArray = [classes.TextModal];\r\n        classArray.push(this.state.isHovered ? classes.hover : '');\r\n        classArray.push(this.props.hideModal ? classes.hide : '');\r\n        return (\r\n            <>\r\n                <div className={classArray.join(' ')} >\r\n                    {/* onMouseEnter={this.toggleHover}\r\n                    onMouseLeave={this.toggleHover}\r\n                > */}\r\n                    {this.props.title ? <h3>{this.props.title}</h3> : null}\r\n                    {this.props.title ? <hr /> : null}\r\n                    {this.props.children}\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TextModal;"]},"metadata":{},"sourceType":"module"}