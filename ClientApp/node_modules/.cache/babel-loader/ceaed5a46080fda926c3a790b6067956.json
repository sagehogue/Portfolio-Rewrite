{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\src\\\\pages\\\\SplashPage\\\\SplashPage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PageModal from '../../components/PageModal/PageModal';\nimport TextModal from '../../components/TextModal/TextModal';\nimport Avatar from '../../components/Avatar/Avatar';\nimport classes from './SplashPage.module.css';\n\nvar SplashPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SplashPage, _Component);\n\n  function SplashPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SplashPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SplashPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      typing: false,\n      display: {\n        first: false,\n        second: false,\n        third: false\n      }\n    };\n\n    _this.toggleTyping = function () {\n      _this.setState(function (oldState) {\n        return _objectSpread({}, oldState, {\n          typing: !oldState.typing\n        });\n      });\n    };\n\n    _this.pageModalRef = React.createRef();\n\n    _this.scrollPageModal = function () {\n      return window.scrollTo(0, _this.pageModalRef.current.offsetTop);\n    };\n\n    return _this;\n  }\n\n  _createClass(SplashPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.typeForAWhile(1500, true).then(function (response) {\n        return _this2.loadMessage(\"first\");\n      }) // .then(response => this.pause(500))\n      .then(function (response) {\n        return _this2.typeForAWhile(1200);\n      }).then(function (response) {\n        return _this2.loadMessage(\"second\");\n      } // .then(response => this.pause(500))\n      ).then(function (response) {\n        return _this2.typeForAWhile(900);\n      }).then(function (response) {\n        return _this2.loadMessage(\"third\");\n      });\n    }\n  }, {\n    key: \"typeForAWhile\",\n    value: function typeForAWhile() {\n      var _this3 = this;\n\n      var typeDuration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2000;\n      var shouldScrollPage = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (shouldScrollPage) {\n        this.scrollPageModal();\n      }\n\n      return new Promise(function (res, rej) {\n        _this3.setState(function (oldState) {\n          return _objectSpread({}, oldState, {\n            typing: true\n          });\n        });\n\n        setTimeout(function () {\n          _this3.setState(function (oldState) {\n            return _objectSpread({}, oldState, {\n              typing: false\n            });\n          });\n\n          res('Successfully typed');\n        }, typeDuration);\n      });\n    }\n  }, {\n    key: \"loadMessage\",\n    value: function loadMessage(MsgToDisplay) {\n      var _this4 = this;\n\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n      return new Promise(function (res, rej) {\n        _this4.setState(function (oldState) {\n          var newState = _objectSpread({}, oldState); // console.log(MsgToDisplay)\n\n\n          newState.display[MsgToDisplay] = true;\n          return newState;\n        });\n\n        setTimeout(function () {\n          res(\"Loaded \".concat(MsgToDisplay, \" message\"));\n        }, duration);\n      });\n    } // I don't think this function works.\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var pauseDuration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n      return new Promise(function (res, rej) {\n        setTimeout(function () {\n          res('pause over');\n        }, pauseDuration);\n      });\n    } // need to implement handling for the pageload animations.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var messages = {\n        first: React.createElement(\"div\", {\n          className: \"\".concat(classes.textModal, \" \").concat(classes.ToCenter, \" \").concat(this.state.display.first ? null : classes.Hide),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(TextModal, {\n          hide: true,\n          ref: this.pageModalRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"\".concat(classes.greeting, \" \").concat(classes.fontCol1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Hi, I'm\"), React.createElement(\"span\", {\n          className: \"\".concat(classes.sage, \" \").concat(classes.fontCol2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \" Sage. \")), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"I'm a Portland local, a web developer, a tech enthusiast, and a dreamer.\"))),\n        second: React.createElement(\"div\", {\n          className: \"\".concat(classes.textModal, \" \").concat(classes.ToCenter, \" \").concat(this.state.display.second ? null : classes.Hide),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(TextModal, {\n          hide: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"\".concat(classes.fontCol1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Welcome to \"), React.createElement(\"span\", {\n          className: \"\".concat(classes.fontCol2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"my website.\")), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"To learn more, click a button below.\"))),\n        third: React.createElement(\"div\", {\n          className: \"\".concat(classes.textModal, \" \").concat(classes.ToCenter, \" \").concat(this.state.display.third ? null : classes.Hide, \" \").concat(classes.SpaceFromBottom),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(TextModal, {\n          hide: true,\n          holdsButtons: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.flexContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/story\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.Link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Vistelse\")), React.createElement(\"a\", {\n          href: \"mailto:inquiries.sagehogue@gmail.com?subject=Hey Sage, I would like to ask you something..\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.Link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Contact Me\")))))\n      };\n      return (// <div className={classes.wrapper}>\n        React.createElement(PageModal, {\n          displayed: \"splash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"\".concat(classes.ToLeft, \" \").concat(classes.Avatar),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          isTyping: this.state.typing,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        })), messages.first, messages.second, messages.third) // </div>\n\n      );\n    }\n  }]);\n\n  return SplashPage;\n}(Component);\n\nexport default SplashPage;","map":{"version":3,"sources":["C:\\Users\\Sge\\Desktop\\leet shit\\Websites\\Portfolio-Rewrite\\ClientApp\\src\\pages\\SplashPage\\SplashPage.js"],"names":["React","Component","Link","PageModal","TextModal","Avatar","classes","SplashPage","state","typing","display","first","second","third","toggleTyping","setState","oldState","pageModalRef","createRef","scrollPageModal","window","scrollTo","current","offsetTop","typeForAWhile","then","response","loadMessage","typeDuration","shouldScrollPage","Promise","res","rej","setTimeout","MsgToDisplay","duration","newState","pauseDuration","messages","textModal","ToCenter","Hide","greeting","fontCol1","sage","fontCol2","SpaceFromBottom","flexContainer","ToLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport PageModal from '../../components/PageModal/PageModal';\r\nimport TextModal from '../../components/TextModal/TextModal';\r\nimport Avatar from '../../components/Avatar/Avatar';\r\nimport classes from './SplashPage.module.css';\r\n\r\nclass SplashPage extends Component {\r\n    state = {\r\n        typing: false,\r\n        display: {\r\n            first: false,\r\n            second: false,\r\n            third: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.typeForAWhile(1500, true)\r\n            .then(response => this.loadMessage(\"first\"))\r\n            // .then(response => this.pause(500))\r\n            .then(response => this.typeForAWhile(1200))\r\n            .then(response =>\r\n                this.loadMessage(\"second\")\r\n                // .then(response => this.pause(500))\r\n            ).then(response => this.typeForAWhile(900))\r\n            .then(response => this.loadMessage(\"third\"));\r\n    }\r\n\r\n    typeForAWhile(typeDuration = 2000, shouldScrollPage) {\r\n        if (shouldScrollPage) {\r\n            this.scrollPageModal();\r\n        }\r\n        return new Promise((res, rej) => {\r\n            this.setState((oldState) => {\r\n                return {\r\n                    ...oldState,\r\n                    typing: true\r\n                }\r\n            })\r\n            setTimeout(() => {\r\n                this.setState((oldState) => {\r\n                    return {\r\n                        ...oldState,\r\n                        typing: false\r\n                    }\r\n                })\r\n                res('Successfully typed')\r\n            }, typeDuration)\r\n        })\r\n    }\r\n\r\n\r\n    toggleTyping = () => {\r\n        this.setState((oldState) => {\r\n            return {\r\n                ...oldState,\r\n                typing: !oldState.typing,\r\n            }\r\n        })\r\n    }\r\n\r\n    pageModalRef = React.createRef();\r\n    scrollPageModal = () => window.scrollTo(0, this.pageModalRef.current.offsetTop)\r\n\r\n    loadMessage(MsgToDisplay, duration = 1000) {\r\n        return new Promise((res, rej) => {\r\n            this.setState((oldState) => {\r\n                const newState = {\r\n                    ...oldState,\r\n                }\r\n                // console.log(MsgToDisplay)\r\n                newState.display[MsgToDisplay] = true;\r\n                return newState\r\n            })\r\n            setTimeout(() => {\r\n                res(`Loaded ${MsgToDisplay} message`)\r\n            }, duration)\r\n        })\r\n    }\r\n\r\n    // I don't think this function works.\r\n\r\n    pause(pauseDuration = 1000) {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => {\r\n                res('pause over');\r\n            }, pauseDuration);\r\n        })\r\n    }\r\n\r\n\r\n    // need to implement handling for the pageload animations.\r\n\r\n    render() {\r\n        const messages = {\r\n            first: (\r\n                <div className={`${classes.textModal} ${classes.ToCenter} ${this.state.display.first ? null : classes.Hide}`} >\r\n                    <TextModal hide ref={this.pageModalRef}>\r\n                        <h3>\r\n                            <span className={`${classes.greeting} ${classes.fontCol1}`}>\r\n                                Hi, I'm\r\n                            </span>\r\n                            <span className={`${classes.sage} ${classes.fontCol2}`}> Sage. </span>\r\n                        </h3>\r\n                        <hr></hr>\r\n                        <p>I'm a Portland local, a web developer, a tech enthusiast, and a dreamer.</p>\r\n                    </TextModal>\r\n                </div>),\r\n            second: (<div className={`${classes.textModal} ${classes.ToCenter} ${this.state.display.second ? null : classes.Hide}`}>\r\n                <TextModal hide={false}>\r\n                    <h3>\r\n                        <span className={`${classes.fontCol1}`}>\r\n                            Welcome to </span>\r\n                        <span className={`${classes.fontCol2}`}>my website.</span>\r\n                    </h3>\r\n                    <hr />\r\n                    <p>To learn more, click a button below.</p>\r\n                </TextModal>\r\n            </div>),\r\n            third: (<div className={`${classes.textModal} ${classes.ToCenter} ${this.state.display.third ? null : classes.Hide} ${classes.SpaceFromBottom}`}>\r\n                <TextModal hide holdsButtons>\r\n                    <div className={classes.flexContainer}>\r\n                        <Link to=\"/story\">\r\n                            <div className={classes.Link}>Vistelse</div>\r\n                        </Link>\r\n                        <a href=\"mailto:inquiries.sagehogue@gmail.com?subject=Hey Sage, I would like to ask you something..\">\r\n                            {/* <Link to=\"/contact\"> */}\r\n                            <div className={classes.Link}>Contact Me</div>\r\n                            {/* </Link> */}\r\n                        </a>\r\n                        {/* <Link to=\"/portfolio\">\r\n                            <div className={classes.Link}>Portfolio</div>\r\n                        </Link> */}\r\n                    </div>\r\n                </TextModal>\r\n            </div>)\r\n        }\r\n        return (\r\n            // <div className={classes.wrapper}>\r\n            <PageModal displayed={\"splash\"}>\r\n                <div className={`${classes.ToLeft} ${classes.Avatar}`}>\r\n                    <Avatar isTyping={this.state.typing} />\r\n                </div>\r\n                {messages.first}\r\n                {messages.second}\r\n                {messages.third}\r\n            </PageModal>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SplashPage;"]},"metadata":{},"sourceType":"module"}