{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\src\\\\components\\\\Story\\\\Modals\\\\IntroModal\\\\IntroModal.js\";\nimport React, { Component } from 'react';\nimport wait from '../../../../Utilities/wait';\nimport TextModal from '../../../TextModal/TextModal';\nimport classes from './IntroModal.module.css';\n\nvar introModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(introModal, _Component);\n\n  function introModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, introModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(introModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      effectInDuration: _this.props.durationMount,\n      // for slideIn/fadeIn\n      effectOutDuration: _this.props.durationUnmount,\n      // for slideOut/fadeOut\n      effectType: _this.props.type,\n      // slide or fade\n      effectStage: false\n    };\n    _this.classList = [_this.props.type == \"slide\" ? classes.offscreenLeft : classes.invisible];\n    return _this;\n  }\n\n  _createClass(introModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.state.effectType);\n      this.setState(function (oldState) {\n        return _objectSpread({}, oldState, {\n          effectStage: _this2.state.effectType == \"slide\" ? \"offscreenLeft\" : \"invisible\"\n        });\n      });\n      wait().then(function (res) {\n        console.log(_this2.state.effectStage);\n        _this2.classList = [_this2.state.effectStage == \"offscreenLeft\" ? classes.offscreenLeft : classes.invisible];\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this3 = this;\n\n      switch (this.state.effectStage) {\n        case \"offscreenLeft\":\n          this.classList = this.classList.filter(function (className) {\n            return className != classes.offscreenLeft || classes.onscreen;\n          });\n          this.classList.push(classes.onscreen);\n          wait().then(function (res) {\n            _this3.setState(function (oldState) {\n              return _objectSpread({}, oldState, {\n                effectStage: \"onscreen\"\n              });\n            });\n          });\n          break;\n        // case \"offscreenRight\" :\n        //         this.classList.push(classes.offscreenRight)\n        // break;\n\n        case \"onscreen\":\n          if (this.props.show = false) {} else {\n            break;\n          }\n\n          break;\n        // case \"false\" :\n        // break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: this.classList.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TextModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.children));\n    }\n  }]);\n\n  return introModal;\n}(Component); // const messages = {\n//     first: (\n//         <div className={`${classes.introModal} ${classes.textModal} ${classes.firstIntro} ${this.state.display.introMessages ? '' : classes.Hide}`}>\n//             <TextModal>\n//                 <h3>Welcome to <span className={classes.textEmphasis}>Vistelse!</span></h3>\n//                 <p>Vistelse is the Swedish word for sojourn, but more importantly, it's the name of this 'choose your own adventure' app.</p>\n//             </TextModal>\n//         </div>\n//     ),\n//     second: (\n//         <div className={`${classes.introModal} ${classes.textModal} ${this.state.display.introMessages ? '' : classes.Hide} ${classes.secondIntro}`}>\n//             <TextModal>\n//                 <p>Right now I only have one story, but I'm capable of holding a lot more. Check back soon!</p>\n//             </TextModal>\n//         </div>\n//     ),\n//     third: (\n//         <div className={`${classes.introModal} ${classes.textModal} ${this.state.display.introMessages ? '' : classes.Hide} ${classes.thirdIntro} `}>\n//             <TextModal>\n//                 <p className={classes.initiallyDisplayedMessage}>\n//                     Select your <i className={classes.Papyrus}>experience.</i>\n//                 </p>\n//             </TextModal>\n//         </div>\n//     )\n// }\n\n\nexport default introModal;","map":{"version":3,"sources":["C:\\Users\\Sge\\Desktop\\leet shit\\Websites\\Portfolio-Rewrite\\ClientApp\\src\\components\\Story\\Modals\\IntroModal\\IntroModal.js"],"names":["React","Component","wait","TextModal","classes","introModal","state","effectInDuration","props","durationMount","effectOutDuration","durationUnmount","effectType","type","effectStage","classList","offscreenLeft","invisible","console","log","setState","oldState","then","res","filter","className","onscreen","push","show","join","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,gBAAgB,EAAE,MAAKC,KAAL,CAAWC,aADzB;AACwC;AAC5CC,MAAAA,iBAAiB,EAAE,MAAKF,KAAL,CAAWG,eAF1B;AAE2C;AAC/CC,MAAAA,UAAU,EAAE,MAAKJ,KAAL,CAAWK,IAHnB;AAGyB;AAC7BC,MAAAA,WAAW,EAAE;AAJT,K;UAqDRC,S,GAAY,CAAC,MAAKP,KAAL,CAAWK,IAAX,IAAmB,OAAnB,GAA6BT,OAAO,CAACY,aAArC,GAAqDZ,OAAO,CAACa,SAA9D,C;;;;;;wCA9CQ;AAAA;;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWM,UAAvB;AACA,WAAKQ,QAAL,CAAc,UAACC,QAAD,EAAc;AACxB,iCACOA,QADP;AAEIP,UAAAA,WAAW,EAAE,MAAI,CAACR,KAAL,CAAWM,UAAX,IAAyB,OAAzB,GAAkC,eAAlC,GAAoD;AAFrE;AAIH,OALD;AAMAV,MAAAA,IAAI,GAAGoB,IAAP,CAAY,UAAAC,GAAG,EAAI;AACfL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACb,KAAL,CAAWQ,WAAvB;AACA,QAAA,MAAI,CAACC,SAAL,GAAiB,CAAC,MAAI,CAACT,KAAL,CAAWQ,WAAX,IAA0B,eAA1B,GAA2CV,OAAO,CAACY,aAAnD,GAAmEZ,OAAO,CAACa,SAA5E,CAAjB;AAEH,OAJD;AAKH;;;yCAEoB;AAAA;;AACjB,cAAO,KAAKX,KAAL,CAAWQ,WAAlB;AACI,aAAK,eAAL;AACI,eAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeS,MAAf,CAAsB,UAAAC,SAAS;AAAA,mBAAIA,SAAS,IAAIrB,OAAO,CAACY,aAArB,IAAsCZ,OAAO,CAACsB,QAAlD;AAAA,WAA/B,CAAjB;AACA,eAAKX,SAAL,CAAeY,IAAf,CAAoBvB,OAAO,CAACsB,QAA5B;AACAxB,UAAAA,IAAI,GAAGoB,IAAP,CAAY,UAAAC,GAAG,EAAI;AACf,YAAA,MAAI,CAACH,QAAL,CAAc,UAAAC,QAAQ,EAAI;AACtB,uCACOA,QADP;AAEIP,gBAAAA,WAAW,EAAE;AAFjB;AAIH,aALD;AAMH,WAPD;AAQA;AACJ;AACA;AACA;;AACA,aAAK,UAAL;AACQ,cAAI,KAAKN,KAAL,CAAWoB,IAAX,GAAkB,KAAtB,EAA6B,CAE5B,CAFD,MAEO;AACH;AACH;;AACT;AACA;AAEA;AAzBJ;AA4BH;;;6BAIQ;AACL,aACI;AAAK,QAAA,SAAS,EAAE,KAAKb,SAAL,CAAec,IAAf,CAAoB,GAApB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKrB,KAAL,CAAWsB,QADhB,CADJ,CADJ;AAOH;;;;EAhEoB7B,S,GAmEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeI,UAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport wait from '../../../../Utilities/wait';\r\n\r\nimport TextModal from '../../../TextModal/TextModal';\r\n\r\nimport classes from './IntroModal.module.css';\r\n\r\nclass introModal extends Component {\r\n    state = {\r\n        effectInDuration: this.props.durationMount, // for slideIn/fadeIn\r\n        effectOutDuration: this.props.durationUnmount, // for slideOut/fadeOut\r\n        effectType: this.props.type, // slide or fade\r\n        effectStage: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.effectType)\r\n        this.setState((oldState) => {\r\n            return {\r\n                ...oldState,\r\n                effectStage: this.state.effectType == \"slide\"? \"offscreenLeft\" : \"invisible\"\r\n            }\r\n        })\r\n        wait().then(res => {\r\n            console.log(this.state.effectStage)\r\n            this.classList = [this.state.effectStage == \"offscreenLeft\"? classes.offscreenLeft : classes.invisible]\r\n\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        switch(this.state.effectStage) {\r\n            case \"offscreenLeft\" :\r\n                this.classList = this.classList.filter(className => className != classes.offscreenLeft || classes.onscreen)\r\n                this.classList.push(classes.onscreen);\r\n                wait().then(res => {\r\n                    this.setState(oldState => {\r\n                        return {\r\n                            ...oldState,\r\n                            effectStage: \"onscreen\"\r\n                        }\r\n                    })\r\n                });\r\n                break;\r\n            // case \"offscreenRight\" :\r\n            //         this.classList.push(classes.offscreenRight)\r\n            // break;\r\n            case \"onscreen\" :\r\n                    if (this.props.show = false) {\r\n                        \r\n                    } else {\r\n                        break\r\n                    }\r\n            break;\r\n            // case \"false\" :\r\n                \r\n            // break;\r\n            \r\n        }\r\n    }\r\n\r\n    classList = [this.props.type == \"slide\" ? classes.offscreenLeft : classes.invisible]\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.classList.join(' ')}>\r\n                <TextModal>\r\n                    {this.props.children}\r\n                </TextModal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const messages = {\r\n//     first: (\r\n//         <div className={`${classes.introModal} ${classes.textModal} ${classes.firstIntro} ${this.state.display.introMessages ? '' : classes.Hide}`}>\r\n//             <TextModal>\r\n//                 <h3>Welcome to <span className={classes.textEmphasis}>Vistelse!</span></h3>\r\n//                 <p>Vistelse is the Swedish word for sojourn, but more importantly, it's the name of this 'choose your own adventure' app.</p>\r\n//             </TextModal>\r\n//         </div>\r\n//     ),\r\n//     second: (\r\n//         <div className={`${classes.introModal} ${classes.textModal} ${this.state.display.introMessages ? '' : classes.Hide} ${classes.secondIntro}`}>\r\n//             <TextModal>\r\n//                 <p>Right now I only have one story, but I'm capable of holding a lot more. Check back soon!</p>\r\n//             </TextModal>\r\n//         </div>\r\n//     ),\r\n//     third: (\r\n//         <div className={`${classes.introModal} ${classes.textModal} ${this.state.display.introMessages ? '' : classes.Hide} ${classes.thirdIntro} `}>\r\n//             <TextModal>\r\n//                 <p className={classes.initiallyDisplayedMessage}>\r\n//                     Select your <i className={classes.Papyrus}>experience.</i>\r\n//                 </p>\r\n//             </TextModal>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default introModal"]},"metadata":{},"sourceType":"module"}