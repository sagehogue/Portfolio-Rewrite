{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\src\\\\components\\\\NavMenu\\\\NavMenu.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport NavButton from './NavButton/NavButton';\nimport NavTray from './NavTray/NavTray';\nimport TrayItem from './NavTray/TrayItem/TrayItem';\nimport Backdrop from '../Backdrop/Backdrop';\nimport classes from './NavMenu.module.css';\n\nvar NavMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavMenu, _Component);\n\n  function NavMenu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NavMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleWindowSizeChange = function () {\n      _this.setState(function (oldState) {\n        return _objectSpread({}, oldState, {\n          width: window.innerWidth\n        });\n      });\n    };\n\n    _this.handlePageChange = function (e) {\n      // e.preventDefault();\n      // console.log(e.target)\n      var pageClicked = e.target.innerText;\n\n      _this.setState(function (oldState) {\n        return _objectSpread({}, oldState, {\n          activePage: pageClicked\n        });\n      });\n    };\n\n    _this.toggleMenu = function () {\n      _this.setState({\n        menuIsClosed: !_this.state.menuIsClosed\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NavMenu, [{\n    key: \"componentWillMount\",\n    // state = {\n    //     menuIsClosed: true,\n    //     // activePage: \"splash\",\n    //     width: window.innerWidth,\n    // }\n    value: function componentWillMount() {\n      window.addEventListener('resize', this.handleWindowSizeChange);\n      this.setState({\n        menuIsClosed: true,\n        // activePage: \"splash\",\n        width: window.innerWidth\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.handleWindowSizeChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.width < 600 ? React.createElement(\"div\", {\n        className: classes.NavMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(NavButton, {\n        menuClosed: this.state.menuIsClosed,\n        toggleMenuHandler: this.toggleMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(NavTray, {\n        menuClosed: this.state.menuIsClosed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/\",\n        activeClassName: classes.active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(TrayItem, {\n        clickHandler: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Home\")), React.createElement(NavLink, {\n        to: \"/story\",\n        activeClassName: classes.active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(TrayItem, {\n        clickHandler: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Vistelse\")), React.createElement(NavLink, {\n        to: \"/about\",\n        activeClassName: classes.active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(TrayItem, {\n        clickHandler: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"About\"))), React.createElement(Backdrop, {\n        isDisabled: this.state.menuIsClosed,\n        menuHandler: this.toggleMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: classes.DesktopMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/\",\n        activeClassName: classes.active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(TrayItem, {\n        clickHandler: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Home\")), React.createElement(NavLink, {\n        to: \"/story\",\n        activeClassName: classes.active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(TrayItem, {\n        clickHandler: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Vistelse\")), React.createElement(NavLink, {\n        to: \"/about\",\n        activeClassName: classes.active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(TrayItem, {\n        clickHandler: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"About\")));\n    }\n  }]);\n\n  return NavMenu;\n}(Component);\n\nexport default NavMenu;","map":{"version":3,"sources":["C:\\Users\\Sge\\Desktop\\leet shit\\Websites\\Portfolio-Rewrite\\ClientApp\\src\\components\\NavMenu\\NavMenu.js"],"names":["React","Component","NavLink","NavButton","NavTray","TrayItem","Backdrop","classes","NavMenu","handleWindowSizeChange","setState","oldState","width","window","innerWidth","handlePageChange","e","pageClicked","target","innerText","activePage","toggleMenu","menuIsClosed","state","addEventListener","removeEventListener","active","DesktopMenu"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport NavButton from './NavButton/NavButton';\r\nimport NavTray from './NavTray/NavTray';\r\nimport TrayItem from './NavTray/TrayItem/TrayItem';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nimport classes from './NavMenu.module.css';\r\n\r\nclass NavMenu extends Component {\r\n    // state = {\r\n    //     menuIsClosed: true,\r\n    //     // activePage: \"splash\",\r\n    //     width: window.innerWidth,\r\n    // }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener('resize', this.handleWindowSizeChange);\r\n        this.setState({\r\n            menuIsClosed: true,\r\n            // activePage: \"splash\",\r\n            width: window.innerWidth,\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    }\r\n\r\n    handleWindowSizeChange = () => {\r\n        this.setState((oldState) => {\r\n            return {\r\n                ...oldState,\r\n                width: window.innerWidth\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePageChange = (e) => {\r\n        // e.preventDefault();\r\n        // console.log(e.target)\r\n        const pageClicked = e.target.innerText;\r\n        this.setState((oldState) => {\r\n            return {\r\n                ...oldState,\r\n                activePage: pageClicked,\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({ menuIsClosed: !this.state.menuIsClosed })\r\n    }\r\n\r\n    render() {\r\n\r\n        return this.state.width < 600 ? (\r\n            <div className={classes.NavMenu}>\r\n                <NavButton\r\n                    menuClosed={this.state.menuIsClosed}\r\n                    toggleMenuHandler={this.toggleMenu} />\r\n                <NavTray menuClosed={this.state.menuIsClosed}>\r\n                    <NavLink exact to=\"/\" activeClassName={classes.active}>\r\n                        <TrayItem clickHandler={this.handlePageChange}>Home</TrayItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink to=\"/story\" activeClassName={classes.active}>\r\n                        <TrayItem clickHandler={this.handlePageChange}>Vistelse</TrayItem>\r\n                    </NavLink>\r\n                    <NavLink to=\"/about\" activeClassName={classes.active}>\r\n                        <TrayItem clickHandler={this.handlePageChange}>About</TrayItem>\r\n                    </NavLink>\r\n                    {/* <Link to=\"/about\"><TrayItem>About</TrayItem></Link> */}\r\n                    {/* <NavLink to=\"/portfolio\" activeClassName={classes.active}>\r\n                        <TrayItem clickHandler={this.handlePageChange}>Portfolio</TrayItem>\r\n                    </NavLink> */}\r\n                </NavTray>\r\n                <Backdrop isDisabled={this.state.menuIsClosed} menuHandler={this.toggleMenu} />\r\n            </div>\r\n        ) : (\r\n                <div className={classes.DesktopMenu}>\r\n                    <NavLink exact to=\"/\" activeClassName={classes.active}>\r\n                        <TrayItem clickHandler={this.handlePageChange}>Home</TrayItem>\r\n                    </NavLink>\r\n                    <NavLink to=\"/story\" activeClassName={classes.active}>\r\n                        <TrayItem clickHandler={this.handlePageChange}>Vistelse</TrayItem>\r\n                    </NavLink>\r\n                    <NavLink to=\"/about\" activeClassName={classes.active}>\r\n                        <TrayItem clickHandler={this.handlePageChange}>About</TrayItem>\r\n                    </NavLink>\r\n                    {/* <NavLink to=\"/portfolio\" activeClassName={classes.active}>\r\n                        <TrayItem clickHandler={this.handlePageChange}>Portfolio</TrayItem\r\n                        ></NavLink> */}\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default NavMenu;"]},"metadata":{},"sourceType":"module"}