{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sge\\\\Desktop\\\\leet shit\\\\Websites\\\\Portfolio-Rewrite\\\\ClientApp\\\\src\\\\components\\\\Story\\\\Modals\\\\IntroModal\\\\IntroModal.js\";\nimport React, { Component } from 'react';\nimport wait from '../../../../Utilities/wait';\nimport TextModal from '../../../TextModal/TextModal';\nimport classes from './IntroModal.module.css';\n\nvar introModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(introModal, _Component);\n\n  function introModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, introModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(introModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      effectInDuration: _this.props.durationMount,\n      // for slideIn/fadeIn\n      effectOutDuration: _this.props.durationUnmount,\n      // for slideOut/fadeOut\n      effectType: _this.props.type,\n      // slide or fade\n      // effectStage: this.props.type == \"slide\"? \"offscreenLeft\" : \"invisible\",\n      classList: [_this.props.type == \"slide\" ? classes.offscreenLeft : classes.invisible]\n    };\n    return _this;\n  }\n\n  _createClass(introModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      wait().then(function (res) {\n        _this2.setState(function (oldState) {\n          return _objectSpread({}, oldState, {\n            effectStage: _this2.state.effectType == \"slide\" ? \"offscreenLeft\" : \"invisible\"\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this3 = this;\n\n      switch (this.state.effectStage) {\n        case \"offscreenLeft\":\n          wait().then(function (res) {\n            _this3.setState(function (oldState) {\n              return _objectSpread({}, oldState, {\n                classList: [classes.onscreen],\n                effectStage: \"transitioning\"\n              });\n            });\n          });\n          break;\n        // case \"offscreenRight\" :\n        //         this.classList.push(classes.offscreenRight)\n        // break;\n\n        case \"onscreen\":\n          console.log(this.props.show);\n\n          if (this.props.show == false) {\n            this.setState(function (oldState) {\n              return _objectSpread({}, oldState, {\n                classList: [classes.offscreenRight]\n              });\n            });\n            console.log(this.classList);\n          } else {\n            break;\n          }\n\n          break;\n        // case \"false\" :\n        // break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: this.state.classList.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(TextModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.props.children));\n    }\n  }]);\n\n  return introModal;\n}(Component);\n\nexport default introModal;","map":{"version":3,"sources":["C:\\Users\\Sge\\Desktop\\leet shit\\Websites\\Portfolio-Rewrite\\ClientApp\\src\\components\\Story\\Modals\\IntroModal\\IntroModal.js"],"names":["React","Component","wait","TextModal","classes","introModal","state","effectInDuration","props","durationMount","effectOutDuration","durationUnmount","effectType","type","classList","offscreenLeft","invisible","then","res","setState","oldState","effectStage","onscreen","console","log","show","offscreenRight","join","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,gBAAgB,EAAE,MAAKC,KAAL,CAAWC,aADzB;AACwC;AAC5CC,MAAAA,iBAAiB,EAAE,MAAKF,KAAL,CAAWG,eAF1B;AAE2C;AAC/CC,MAAAA,UAAU,EAAE,MAAKJ,KAAL,CAAWK,IAHnB;AAGyB;AAC7B;AACAC,MAAAA,SAAS,EAAE,CAAC,MAAKN,KAAL,CAAWK,IAAX,IAAmB,OAAnB,GAA4BT,OAAO,CAACW,aAApC,GAAoDX,OAAO,CAACY,SAA7D;AALP,K;;;;;;wCAQY;AAAA;;AAChBd,MAAAA,IAAI,GAAGe,IAAP,CAAY,UAAAC,GAAG,EAAI;AAEf,QAAA,MAAI,CAACC,QAAL,CAAc,UAACC,QAAD,EAAc;AACxB,mCACOA,QADP;AAEIC,YAAAA,WAAW,EAAE,MAAI,CAACf,KAAL,CAAWM,UAAX,IAAyB,OAAzB,GAAkC,eAAlC,GAAoD;AAFrE;AAIH,SALD;AAMH,OARD;AASH;;;yCAEoB;AAAA;;AACjB,cAAO,KAAKN,KAAL,CAAWe,WAAlB;AACI,aAAK,eAAL;AACQnB,UAAAA,IAAI,GAAGe,IAAP,CAAY,UAAAC,GAAG,EAAI;AACf,YAAA,MAAI,CAACC,QAAL,CAAc,UAAAC,QAAQ,EAAI;AACtB,uCACOA,QADP;AAEIN,gBAAAA,SAAS,EAAE,CAACV,OAAO,CAACkB,QAAT,CAFf;AAGID,gBAAAA,WAAW,EAAE;AAHjB;AAKH,aAND;AAOH,WARD;AASJ;AACJ;AACA;AACA;;AACA,aAAK,UAAL;AACIE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWiB,IAAvB;;AACI,cAAI,KAAKjB,KAAL,CAAWiB,IAAX,IAAmB,KAAvB,EAA8B;AAC1B,iBAAKN,QAAL,CAAc,UAAAC,QAAQ,EAAI;AACtB,uCACOA,QADP;AAEIN,gBAAAA,SAAS,EAAE,CAACV,OAAO,CAACsB,cAAT;AAFf;AAIH,aALD;AAMAH,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,SAAjB;AACH,WARD,MAQO;AACH;AACH;;AACT;AACA;AAEA;AA/BJ;AAkCH;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAE,KAAKR,KAAL,CAAWQ,SAAX,CAAqBa,IAArB,CAA0B,GAA1B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKnB,KAAL,CAAWoB,QADhB,CADJ,CADJ;AAOH;;;;EAlEoB3B,S;;AAsEzB,eAAeI,UAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport wait from '../../../../Utilities/wait';\r\n\r\nimport TextModal from '../../../TextModal/TextModal';\r\n\r\nimport classes from './IntroModal.module.css';\r\n\r\nclass introModal extends Component {\r\n    state = {\r\n        effectInDuration: this.props.durationMount, // for slideIn/fadeIn\r\n        effectOutDuration: this.props.durationUnmount, // for slideOut/fadeOut\r\n        effectType: this.props.type, // slide or fade\r\n        // effectStage: this.props.type == \"slide\"? \"offscreenLeft\" : \"invisible\",\r\n        classList: [this.props.type == \"slide\"? classes.offscreenLeft : classes.invisible],\r\n    }\r\n\r\n    componentDidMount() {\r\n        wait().then(res => {\r\n\r\n            this.setState((oldState) => {\r\n                return {\r\n                    ...oldState,\r\n                    effectStage: this.state.effectType == \"slide\"? \"offscreenLeft\" : \"invisible\"\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        switch(this.state.effectStage) {\r\n            case \"offscreenLeft\" :\r\n                    wait().then(res => {\r\n                        this.setState(oldState => {\r\n                            return {\r\n                                ...oldState,\r\n                                classList: [classes.onscreen],\r\n                                effectStage: \"transitioning\"\r\n                            }\r\n                        })\r\n                    })\r\n                break;\r\n            // case \"offscreenRight\" :\r\n            //         this.classList.push(classes.offscreenRight)\r\n            // break;\r\n            case \"onscreen\" :\r\n                console.log(this.props.show)\r\n                    if (this.props.show == false) {\r\n                        this.setState(oldState => {\r\n                            return {\r\n                                ...oldState,\r\n                                classList: [classes.offscreenRight]\r\n                            }\r\n                        })\r\n                        console.log(this.classList)\r\n                    } else {\r\n                        break\r\n                    }\r\n            break;\r\n            // case \"false\" :\r\n                \r\n            // break;\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.classList.join(' ')}>\r\n                <TextModal>\r\n                    {this.props.children}\r\n                </TextModal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default introModal"]},"metadata":{},"sourceType":"module"}